def defaultEncoding = 'UTF-8'

configure(subprojects) { project ->
	group = "jp.canetrash.springbatch.samples"
	version = "0.1"

	ext.junitVersion    = "4.11"
	ext.slf4jVersion    = "1.6.1"
	ext.gradleScriptDir = "${rootProject.projectDir}/gradle"

	apply plugin: "java"
    apply plugin: 'eclipse'

    sourceSets {
       main {
          java {
               srcDir 'src/java'
          }
          resources {
               srcDir 'src/resources'
          }      
       }
       test {
          java {
               srcDir 'src/java'
          }
          resources {
               srcDir 'src/resources'
          }
       }
    }

	compileJava {
		sourceCompatibility=1.6
		targetCompatibility=1.6
	}
	compileTestJava {
		sourceCompatibility=1.6
		targetCompatibility=1.6
	}

	[compileJava, compileTestJava]*.options*.compilerArgs = [
		"-Xlint:serial",
		"-Xlint:varargs",
		"-Xlint:cast",
		"-Xlint:classfile",
		"-Xlint:dep-ann",
		"-Xlint:divzero",
		"-Xlint:empty",
		"-Xlint:finally",
		"-Xlint:overrides",
		"-Xlint:path",
		"-Xlint:processing",
		"-Xlint:static",
		"-Xlint:try",
		"-Xlint:-options",
		"-Xlint:-fallthrough",
		"-Xlint:-rawtypes",
		"-Xlint:-deprecation",
		"-Xlint:-unchecked"
	]
    [compileJava, compileTestJava]*.options*.encoding = defaultEncoding

	sourceSets.test.resources.srcDirs = ["src/test/resources", "src/test/java"]

	test {
		systemProperty("java.awt.headless", "true")
		systemProperty("testGroups", project.properties.get("testGroups"))
		scanForTestClasses = false
		include '**/*Tests.*'
		exclude '**/*Abstract*.*'
	}

    repositories {
        mavenCentral()
		maven { url "https://repository.cloudera.com/artifactory/repo/" }
    }

	dependencies {
		testCompile("junit:junit:${junitVersion}")
		testCompile("org.hamcrest:hamcrest-all:1.3")
		testCompile("org.mockito:mockito-core:1.9.5")
        compile 'org.springframework.batch:spring-batch-core:2.2.5.RELEASE'    
	}

	jar {
		manifest.attributes["Created-By"] =
			"${System.getProperty("java.version")} (${System.getProperty("java.specification.vendor")})"
		manifest.attributes["Implementation-Title"] = project.name
		manifest.attributes["Implementation-Version"] = project.version
	}

	javadoc {
		description = "Generates project-level javadoc for use in -javadoc jar"

		options.author = true
		options.header = project.name
	}

	task sourcesJar(type: Jar, dependsOn:classes) {
		classifier = "sources"
		from sourceSets.main.allJava.srcDirs
		include "**/*.java", "**/*.aj"
	}

	task javadocJar(type: Jar) {
		classifier = "javadoc"
		from javadoc
	}

	artifacts {
		archives sourcesJar
		archives javadocJar
	}
}

configure(rootProject) {
	description = "Spring Batch Samples"

	apply plugin: "groovy"
}

project("spring-batch-hadoop") {
    description = "Spring Batch Hadoop"
 
 	dependencies {
         compile 'org.springframework.data:spring-data-hadoop:1.0.2.RELEASE-hadoop22'    
		 compile "org.springframework.data:spring-yarn-batch:2.0.0.RELEASE"
    }
}

project("spring-batch-scaling") {
    description = "Spring Batch Scaling"
}
